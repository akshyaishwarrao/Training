cdMicrosoft Windows [Version 10.0.19041.572]
(c) 2020 Microsoft Corporation. All rights reserved.

C:\Users\snigs> cd
C:\Users\snigs

C:\Users\snigs> cd C:\Users\snigs\Downloads\New folder

C:\Users\snigs\Downloads\New folder> ssh -i websitetraining1.pem
usage: ssh [-46AaCfGgKkMNnqsTtVvXxYy] [-B bind_interface]
           [-b bind_address] [-c cipher_spec] [-D [bind_address:]port]
           [-E log_file] [-e escape_char] [-F configfile] [-I pkcs11]
           [-i identity_file] [-J [user@]host[:port]] [-L address]
           [-l login_name] [-m mac_spec] [-O ctl_cmd] [-o option] [-p port]
           [-Q query_option] [-R address] [-S ctl_path] [-W host:port]
           [-w local_tun[:remote_tun]] destination [command]

C:\Users\snigs\Downloads\New folder> ssh -i websitetraining1.pem ec2-user@ec2-18-212-169-25.compute-1.amazonaws.com
The authenticity of host 'ec2-18-212-169-25.compute-1.amazonaws.com (18.212.169.25)' can't be established.
ECDSA key fingerprint is SHA256:cXZ+CNc4tMdJsg/p1slrY0ArS+DAWnjX68XPimTTITs.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'ec2-18-212-169-25.compute-1.amazonaws.com,18.212.169.25' (ECDSA) to the list of known hosts.

       __|  __|_  )
       _|  (     /   Amazon Linux 2 AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-2/

       __|  __|_  )
       _|  (     /   Amazon Linux 2 AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-2/
[ec2-user@ip-172-31-82-22 ~]$ docker ps
-bash: docker: command not found
[ec2-user@ip-172-31-82-22 ~]$ sudo yum -y install docker
Loaded plugins: extras_suggestions, langpacks, priorities, update-motd
amzn2-core                                      
                                                 | 3.7 kB  00:00:00
Resolving Dependencies
--> Running transaction check
---> Package docker.x86_64 0:20.10.7-5.amzn2 will be installed
--> Processing Dependency: runc >= 1.0.0 for package: docker-20.10.7-5.amzn2.x86_64
--> Processing Dependency: libcgroup >= 0.40.rc1-5.15 for package: docker-20.10.7-5.amzn2.x86_64
--> Processing Dependency: containerd >= 1.3.2 for package: docker-20.10.7-5.amzn2.x86_64
--> Processing Dependency: pigz for package: docker-20.10.7-5.amzn2.x86_64
--> Running transaction check
---> Package containerd.x86_64 0:1.4.6-8.amzn2 will be installed
---> Package libcgroup.x86_64 0:0.41-21.amzn2 will be installed
---> Package pigz.x86_64 0:2.3.4-1.amzn2.0.1 will be installed
---> Package runc.x86_64 0:1.0.0-2.amzn2 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

======================================================================================================================== Package                  Arch                 Version                            Repository                       Size
========================================================================================================================Installing:
 docker                   x86_64               20.10.7-5.amzn2                    amzn2extra-docker                42 M
Installing for dependencies:
 containerd               x86_64               1.4.6-8.amzn2                      amzn2extra-docker                24 M
 libcgroup                x86_64               0.41-21.amzn2                      amzn2-core                       66 k
 pigz                     x86_64               2.3.4-1.amzn2.0.1                  amzn2-core                       81 k
 runc                     x86_64               1.0.0-2.amzn2                      amzn2extra-docker               3.3 M

Transaction Summary
========================================================================================================================Install  1 Package (+4 Dependent packages)

Total download size: 69 M
Installed size: 285 M
Downloading packages:
(1/5): libcgroup-0.41-21.amzn2.x86_64.rpm                                                        |  66 kB  00:00:00
(2/5): pigz-2.3.4-1.amzn2.0.1.x86_64.rpm                                                         |  81 kB  00:00:00
(3/5): containerd-1.4.6-8.amzn2.x86_64.rpm                                                       |  24 MB  00:00:00
(4/5): runc-1.0.0-2.amzn2.x86_64.rpm                                                             | 3.3 MB  00:00:00
(5/5): docker-20.10.7-5.amzn2.x86_64.rpm                                                         |  42 MB  00:00:00
------------------------------------------------------------------------------------------------------------------------Total                                                                                    73 MB/s |  69 MB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : runc-1.0.0-2.amzn2.x86_64                                                                            1/5
  Installing : containerd-1.4.6-8.amzn2.x86_64                                                                      2/5
  Installing : libcgroup-0.41-21.amzn2.x86_64                                                                       3/5
  Installing : pigz-2.3.4-1.amzn2.0.1.x86_64                                                                        4/5
  Installing : docker-20.10.7-5.amzn2.x86_64                                                                        5/5
  Verifying  : docker-20.10.7-5.amzn2.x86_64                                                                        1/5
  Verifying  : containerd-1.4.6-8.amzn2.x86_64                                                                      2/5
  Verifying  : runc-1.0.0-2.amzn2.x86_64                                                                            3/5
  Verifying  : pigz-2.3.4-1.amzn2.0.1.x86_64                                                                        4/5
  Verifying  : libcgroup-0.41-21.amzn2.x86_64                                                                       5/5

Installed:
  docker.x86_64 0:20.10.7-5.amzn2

Dependency Installed:
  containerd.x86_64 0:1.4.6-8.amzn2       libcgroup.x86_64 0:0.41-21.amzn2       pigz.x86_64 0:2.3.4-1.amzn2.0.1
  runc.x86_64 0:1.0.0-2.amzn2

Complete!
[ec2-user@ip-172-31-82-22 ~]$ docker ps # gives you a list of docker processes
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

[ec2-user@ip-172-31-82-22 ~]$ sudo systemctl status docker # to check status of docker engine check for running keyword

[ec2-user@ip-172-31-82-22 ~]$ docker ps
Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json": dial unix /var/run/docker.sock: connect: permission denied
[ec2-user@ip-172-31-82-22 ~]$ sudo docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

[ec2-user@ip-172-31-82-22 ~]$ sudo -i

[root@ip-172-31-82-22 ~]# mkdir myapp # this creates a directory/folder


[root@ip-172-31-82-22 ~]# nano Dockerfile

[root@ip-172-31-82-22 myapp]# cat Dockerfile # cat command reads a file

FROM ubuntu:18.04
MAINTAINER Faithful <faithful@infused.io>
RUN apt-get update && apt-get install -y apache2 && apt-get clean && rm -rf /var/lib/apt/lists/*
ENV APACHE_RUN_USER  www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR   /var/log/apache2
ENV APACHE_PID_FILE  /var/run/apache2/apache2.pid
ENV APACHE_RUN_DIR   /var/run/apache2
ENV APACHE_LOCK_DIR  /var/lock/apache2
ENV APACHE_LOG_DIR   /var/log/apache2
RUN mkdir -p $APACHE_RUN_DIR
RUN mkdir -p $APACHE_LOCK_DIR
RUN mkdir -p $APACHE_LOG_DIR
COPY index.html /var/www/html
EXPOSE 80
CMD ["/usr/sbin/apache2", "-D", "FOREGROUND"]


[root@ip-172-31-82-22 myapp]# nano index.html # nano is an editor



[root@ip-172-31-82-22 myapp]# docker build -t clever . # build your container (similar to a virtual machine)
Successfully tagged clever:latest

[root@ip-172-31-82-22 myapp]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

[root@ip-172-31-82-22 myapp]# docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

[root@ip-172-31-82-22 myapp]# docker image ls ( in docker terminology VM is known as image), ls is for listing
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
clever       latest    bd1295d1caac   51 seconds ago   160MB
ubuntu       18.04     b67d6ac264e4   2 weeks ago      63.2MB

[root@ip-172-31-82-22 myapp]# docker run --name my_first_apache_instance -i -t clever (start your docker container)
AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.17.0.2. Set the 'ServerName' directive globally to suppress this message

^C[root@ip-172-31-82-22 myapp]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

[root@ip-172-31-82-22 myapp]# docker ps -a # ( list all alive and exited containers)
CONTAINER ID   IMAGE     COMMAND                  CREATED              STATUS                      PORTS     NAMES
fd544e5ba5bf   clever    "/usr/sbin/apache2 -…"   About a minute ago   Exited (0) 19 seconds ago             my_first_apache_instance

[root@ip-172-31-82-22 myapp]# docker run -p 80:80 clever
AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.17.0.2. Set the 'ServerName' directive globally to suppress this message
^C[root@ip-172-31-82-22 myapp]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
[root@ip-172-31-82-22 myapp]# docker run -d -p 80:80 clever
f32c33f175b5d197cdac4421b070b019136bc48e1c13d57c5b1182da429fdac4

[root@ip-172-31-82-22 myapp]# docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                               NAMES
f32c33f175b5   clever    "/usr/sbin/apache2 -…"   7 seconds ago   Up 5 seconds   0.0.0.0:80->80/tcp, :::80->80/tcp   hardcore_gagarin

[root@ip-172-31-82-22 myapp]# docker build -t clever1 . # The dot indicates tro read from CURRENT directory)
Sending build context to Docker daemon  3.584kB
Successfully tagged clever1:latest

[root@ip-172-31-82-22 myapp]# docker images
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
clever1      latest    4cee782c6767   14 seconds ago   160MB
clever       latest    bd1295d1caac   19 minutes ago   160MB
ubuntu       18.04     b67d6ac264e4   2 weeks ago      63.2MB

[root@ip-172-31-82-22 myapp]# docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                               NAMES
f32c33f175b5   clever    "/usr/sbin/apache2 -…"   15 minutes ago   Up 15 minutes   0.0.0.0:80->80/tcp, :::80->80/tcp   hardcore_gagarin



# Stop one or more running containers
[root@ip-172-31-82-22 myapp]# docker stop f32c33f175b5
f32c33f175b5

[root@ip-172-31-82-22 myapp]# docker run -d -p 80:80 clever1
a50867064992d65a5ab7dbb42a09096a19a666bb5cdd508ec04f6cb69afa8746

[root@ip-172-31-82-22 myapp]# docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                               NAMES
a50867064992   clever1   "/usr/sbin/apache2 -…"   5 seconds ago   Up 4 seconds   0.0.0.0:80->80/tcp, :::80->80/tcp   elegant_roentgen

[root@ip-172-31-82-22 myapp]# docker stop a50867064992
a50867064992
[root@ip-172-31-82-22 myapp]# docker run -d -p 80:80 clever

592433b6cb22dbe8d72691dc1373308d066b63de94585af989b31d7a93d65e63

[root@ip-172-31-82-22 myapp]# nano index.html
[root@ip-172-31-82-22 myapp]#


1) install docker (one-time step on a new VM)
2) start docker engine (one time step on your VM)
3) create a dockerfile with the html you want to copy
4) docker build to create the image
5) docker run to start your docker container

Exercises
1) get familiar or knowledgeable on how to use nano editor
2) create a new dockerfile and take any sample index.html from google and build a docker image, start and run the container
3) display the html in your browser





